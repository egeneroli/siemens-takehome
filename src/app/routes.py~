# src/app/controllers/chat_controller.py

from flask import Blueprint, request, jsonify, Flask
from typing import Optional
from langchain_integration.chat_service import ChatService


class ChatController:
    """
    A class-based controller for the chat endpoint.
    Wraps a Blueprint to attach endpoints OOP style.
    """

    def __init__(self, app: Flask, url_prefix: str = "/api") -> None:
        self.chat_service: ChatService = ChatService()

        # Create a Blueprint and register routes
        self.bp: Blueprint = Blueprint("chat", __name__)
        self.bp.add_url_rule("/chat", view_func=self.chat, methods=["POST"])
        app.register_blueprint(self.bp, url_prefix=url_prefix)

    def chat(self):
        """
        POST /chat
        Accepts JSON with 'message' key and returns a JSON response from the LLM.
        """
        data: Optional[dict] = request.get_json(silent=True)
        if not data or "message" not in data:
            return jsonify({"error": "Please provide 'message' in the request body."}), 400

        user_message = data["message"]
        response_text = self.chat_service.get_reply(user_message)
        return jsonify({"response": response_text}), 200
